
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: yurtingresses.apps.openyurt.io
spec:
  group: apps.openyurt.io
  names:
    categories:
    - all
    kind: YurtIngress
    listKind: YurtIngressList
    plural: yurtingresses
    shortNames:
    - ying
    singular: yurtingress
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: The nginx ingress controller replicas per pool
      jsonPath: .status.ingress_controller_replicas_per_pool
      name: Replicas-Per-Pool
      type: integer
    - description: The number of pools on which ingress is enabled
      jsonPath: .status.readyNum
      name: ReadyNum
      type: integer
    - description: The number of pools on which ingress is enabling or enable failed
      jsonPath: .status.unreadyNum
      name: NotReadyNum
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: YurtIngress is the Schema for the yurtingresses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: YurtIngressSpec defines the desired state of YurtIngress
            properties:
              ingressControllerImage:
                description: Indicates the ingress controller image url.
                type: string
              ingressControllerReplicasPerPool:
                description: Indicates the number of the ingress controllers to be
                  deployed under all the specified nodepools.
                format: int32
                type: integer
              ingressWebhookCertGenImage:
                description: Indicates the ingress webhook image url.
                type: string
              pools:
                description: Indicates all the nodepools on which to enable ingress.
                items:
                  description: IngressPool defines the details of a Pool for ingress
                  properties:
                    ingressIPs:
                      description: IngressIPs is a list of IP addresses for which
                        nodes will also accept traffic for this service.
                      items:
                        type: string
                      type: array
                    name:
                      description: Indicates the pool name.
                      type: string
                  required:
                  - name
                  type: object
                type: array
            type: object
          status:
            description: YurtIngressStatus defines the observed state of YurtIngress
            properties:
              conditions:
                description: Indicates all the nodepools on which to enable ingress.
                properties:
                  ingressNotReadyPools:
                    description: Indicates the pools that ingress controller is being
                      deployed or deployed failed.
                    items:
                      description: IngressNotReadyPool defines the condition details
                        of an ingress not ready Pool
                      properties:
                        pool:
                          description: Indicates the base pool info.
                          properties:
                            ingressIPs:
                              description: IngressIPs is a list of IP addresses for
                                which nodes will also accept traffic for this service.
                              items:
                                type: string
                              type: array
                            name:
                              description: Indicates the pool name.
                              type: string
                          required:
                          - name
                          type: object
                        unreadyInfo:
                          description: Info of ingress not ready condition.
                          properties:
                            lastTransitionTime:
                              description: Last time the condition transitioned from
                                one status to another.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            type:
                              description: Type of ingress not ready condition.
                              type: string
                          type: object
                      required:
                      - pool
                      type: object
                    type: array
                  ingressReadyPools:
                    description: Indicates the pools that ingress controller is deployed
                      successfully.
                    items:
                      description: IngressPool defines the details of a Pool for ingress
                      properties:
                        ingressIPs:
                          description: IngressIPs is a list of IP addresses for which
                            nodes will also accept traffic for this service.
                          items:
                            type: string
                          type: array
                        name:
                          description: Indicates the pool name.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              ingressControllerImage:
                description: Indicates the ingress controller image url.
                type: string
              ingressControllerReplicasPerPool:
                description: Indicates the number of the ingress controllers deployed
                  under all the specified nodepools.
                format: int32
                type: integer
              ingressWebhookCertGenImage:
                description: Indicates the ingress webhook image url.
                type: string
              readyNum:
                description: Total number of ready pools on which ingress is enabled.
                format: int32
                type: integer
              unreadyNum:
                description: Total number of unready pools on which ingress is enabling
                  or enable failed.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: YurtIngress is the Schema for the yurtingresses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: YurtIngressSpec defines the desired state of YurtIngress
            properties:
              enabled:
                type: boolean
              values:
                x-kubernetes-preserve-unknown-fields: true
            type: object
          status:
            description: YurtIngressStatus defines the observed state of YurtIngress
            properties:
              conditions:
                description: Conditions holds the conditions for the HelmRelease.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastAppliedRevision:
                description: LastAppliedRevision is the revision of the last successfully
                  applied source.
                type: string
              status:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
